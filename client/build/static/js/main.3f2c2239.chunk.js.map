{"version":3,"sources":["pages/Upload.js","index.js"],"names":["Upload","file","setFile","useState","extracting","setExtracting","extractionComplete","setExtractionComplete","formikRef","useRef","navigate","useNavigate","React","createElement","className","type","id","accept","onChange","async","selectedFile","e","target","files","formData","FormData","append","res","axios","post","data","success","current","setValues","_objectSpread","values","err","console","error","style","display","htmlFor","name","Formik","innerRef","initialValues","destinationCountry","arrivalDate","departureDate","flightNumber","airline","accommodationAddress","accommodationPhone","purpose","validationSchema","Yup","required","onSubmit","_ref","setSubmitting","Object","keys","forEach","key","_ref2","isSubmitting","Form","Field","ErrorMessage","component","as","value","disabled","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.3f2c2239.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst Upload = () => {\n  const [file, setFile] = useState(null);\n  const [extracting, setExtracting] = useState(false);\n  const [extractionComplete, setExtractionComplete] = useState(false);\n  const formikRef = useRef();\n  const navigate = useNavigate();\n  \n  // Handle file change\n  const handleFileChange = async (e) => {\n    const selectedFile = e.target.files[0];\n    \n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setExtracting(true);\n      \n      // Create form data\n      const formData = new FormData();\n      formData.append('itinerary', selectedFile);\n      \n      try {\n        // Extract data from PDF\n        const res = await axios.post('/api/itineraries/extract', formData);\n        \n        // Update form values with extracted data\n        if (res.data.success && formikRef.current) {\n          formikRef.current.setValues({\n            ...formikRef.current.values,\n            ...res.data.data\n          });\n          setExtractionComplete(true);\n        }\n      } catch (err) {\n        console.error('Error extracting data:', err);\n      } finally {\n        setExtracting(false);\n      }\n    }\n  };\n  \n  return (\n    <div className=\"container mt-5\">\n      <h1>Upload Your Itinerary</h1>\n      \n      {/* Highlighted PDF upload section */}\n      <div className=\"card mb-4 bg-light\">\n        <div className=\"card-body text-center\">\n          <h2>Step 1: Upload Your Itinerary PDF</h2>\n          <p>Upload your travel itinerary PDF to automatically extract information</p>\n          \n          <div className=\"mb-3\">\n            <input\n              type=\"file\"\n              id=\"itinerary-file\"\n              accept=\"application/pdf\"\n              onChange={handleFileChange}\n              className=\"form-control\"\n              style={{ display: 'none' }}\n            />\n            <label htmlFor=\"itinerary-file\" className=\"btn btn-primary\">\n              {file ? file.name : 'Choose PDF file'}\n            </label>\n          </div>\n          \n          {extracting && <p className=\"text-info\">Extracting data from your PDF...</p>}\n          {extractionComplete && <p className=\"text-success\">Data extracted successfully! Please verify the information below.</p>}\n        </div>\n      </div>\n      \n      <h2>Step 2: Verify and Complete Your Information</h2>\n      \n      <Formik\n        innerRef={formikRef}\n        initialValues={{\n          destinationCountry: '',\n          arrivalDate: '',\n          departureDate: '',\n          flightNumber: '',\n          airline: '',\n          accommodationAddress: '',\n          accommodationPhone: '',\n          purpose: 'tourism'\n        }}\n        validationSchema={Yup.object({\n          destinationCountry: Yup.string().required('Required'),\n          arrivalDate: Yup.date().required('Required'),\n          departureDate: Yup.date().required('Required'),\n          flightNumber: Yup.string().required('Required'),\n          airline: Yup.string().required('Required'),\n          accommodationAddress: Yup.string().required('Required'),\n          purpose: Yup.string().required('Required')\n        })}\n        onSubmit={async (values, { setSubmitting }) => {\n          const formData = new FormData();\n          if (file) {\n            formData.append('itinerary', file);\n          }\n          \n          // Append form values\n          Object.keys(values).forEach(key => {\n            formData.append(key, values[key]);\n          });\n          \n          try {\n            const res = await axios.post('/api/itineraries', formData);\n            if (res.data.success) {\n              navigate('/dashboard');\n            }\n          } catch (err) {\n            console.error('Error uploading itinerary:', err);\n          } finally {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className=\"mb-3\">\n              <label htmlFor=\"destination-country\" className=\"form-label\">Destination Country</label>\n              <Field name=\"destinationCountry\" type=\"text\" id=\"destination-country\" className=\"form-control\" />\n              <ErrorMessage name=\"destinationCountry\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"arrival-date\" className=\"form-label\">Arrival Date</label>\n              <Field name=\"arrivalDate\" type=\"date\" id=\"arrival-date\" className=\"form-control\" />\n              <ErrorMessage name=\"arrivalDate\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"departure-date\" className=\"form-label\">Departure Date</label>\n              <Field name=\"departureDate\" type=\"date\" id=\"departure-date\" className=\"form-control\" />\n              <ErrorMessage name=\"departureDate\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"flight-number\" className=\"form-label\">Flight Number</label>\n              <Field name=\"flightNumber\" type=\"text\" id=\"flight-number\" className=\"form-control\" />\n              <ErrorMessage name=\"flightNumber\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"airline-input\" className=\"form-label\">Airline</label>\n              <Field name=\"airline\" type=\"text\" id=\"airline-input\" className=\"form-control\" />\n              <ErrorMessage name=\"airline\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"accommodation-address\" className=\"form-label\">Accommodation Address</label>\n              <Field name=\"accommodationAddress\" as=\"textarea\" id=\"accommodation-address\" className=\"form-control\" />\n              <ErrorMessage name=\"accommodationAddress\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"accommodation-phone\" className=\"form-label\">Accommodation Phone</label>\n              <Field name=\"accommodationPhone\" type=\"text\" id=\"accommodation-phone\" className=\"form-control\" />\n              <ErrorMessage name=\"accommodationPhone\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <div className=\"mb-3\">\n              <label htmlFor=\"purpose-select\" className=\"form-label\">Purpose of Travel</label>\n              <Field name=\"purpose\" as=\"select\" id=\"purpose-select\" className=\"form-control\">\n                <option value=\"tourism\">Tourism</option>\n                <option value=\"business\">Business</option>\n                <option value=\"education\">Education</option>\n                <option value=\"other\">Other</option>\n              </Field>\n              <ErrorMessage name=\"purpose\" component=\"div\" className=\"text-danger\" />\n            </div>\n            \n            <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting || extracting}>\n              {isSubmitting ? 'Submitting...' : 'Submit'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Upload;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './pages/Upload';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}